// Board is generated by a boardGenerator that takes in:
// width
// height
// #mines

// Board can have the following prop:
// array of arrays with cell values

// Board can have state:
//
import {Component} from 'react';
import {connect} from 'react-redux';
import Cell from './Cell.jsx';

function mapStateToProps(state) {
  const {boardArr} = state;
  return {boardArr}
}

class Board extends Component {
  constructor(props) {
    super(props);
    this.state = {
      boardDidMount: false,
    };
  }

  componentDidMount() {
    this.setState({
      boardDidMount: true,
    })
  }

  render() {
    if (this.state.boardDidMount) {
      return (
        <div id="board">
          {this.props.boardArr.map((boardRow, rowIndex) => {
            return <div key={`${rowIndex}`}>{boardRow.map((cell, colIndex) => {
              return <Cell
                key={`${rowIndex} ${colIndex}`}
                rowIndex={rowIndex}
                colIndex={colIndex}
                isCovered={cell.isCovered}
                value={cell.value}
              />
            })}</div>
          })}
        </div>
      );
    } else {
      return null;
    }
  }
  
}

export default connect(mapStateToProps, null)(Board);